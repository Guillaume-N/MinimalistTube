// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchBar Component should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SearchBar />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="container"
      >
        <form
          action="#"
          method="POST"
          onSubmit={[Function]}
        >
          <section
            className="columns"
          >
            <div
              className="column is-6 is-offset-3 has-text-centered"
            >
              <div
                className="field is-horizontal"
              >
                <input
                  autoFocus={true}
                  className="input"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
                <button
                  className="button is-dark"
                >
                  <span
                    className="icon"
                  >
                    <i
                      className="fas fa-search"
                    />
                  </span>
                </button>
              </div>
            </div>
          </section>
        </form>
      </div>,
      "className": "section",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          action="#"
          method="POST"
          onSubmit={[Function]}
        >
          <section
            className="columns"
          >
            <div
              className="column is-6 is-offset-3 has-text-centered"
            >
              <div
                className="field is-horizontal"
              >
                <input
                  autoFocus={true}
                  className="input"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
                <button
                  className="button is-dark"
                >
                  <span
                    className="icon"
                  >
                    <i
                      className="fas fa-search"
                    />
                  </span>
                </button>
              </div>
            </div>
          </section>
        </form>,
        "className": "container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "action": "#",
          "children": <section
            className="columns"
          >
            <div
              className="column is-6 is-offset-3 has-text-centered"
            >
              <div
                className="field is-horizontal"
              >
                <input
                  autoFocus={true}
                  className="input"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
                <button
                  className="button is-dark"
                >
                  <span
                    className="icon"
                  >
                    <i
                      className="fas fa-search"
                    />
                  </span>
                </button>
              </div>
            </div>
          </section>,
          "method": "POST",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="column is-6 is-offset-3 has-text-centered"
            >
              <div
                className="field is-horizontal"
              >
                <input
                  autoFocus={true}
                  className="input"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
                <button
                  className="button is-dark"
                >
                  <span
                    className="icon"
                  >
                    <i
                      className="fas fa-search"
                    />
                  </span>
                </button>
              </div>
            </div>,
            "className": "columns",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="field is-horizontal"
              >
                <input
                  autoFocus={true}
                  className="input"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
                <button
                  className="button is-dark"
                >
                  <span
                    className="icon"
                  >
                    <i
                      className="fas fa-search"
                    />
                  </span>
                </button>
              </div>,
              "className": "column is-6 is-offset-3 has-text-centered",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <input
                    autoFocus={true}
                    className="input"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />,
                  <button
                    className="button is-dark"
                  >
                    <span
                      className="icon"
                    >
                      <i
                        className="fas fa-search"
                      />
                    </span>
                  </button>,
                ],
                "className": "field is-horizontal",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "autoFocus": true,
                    "className": "input",
                    "onChange": [Function],
                    "type": "text",
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "input",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <span
                      className="icon"
                    >
                      <i
                        className="fas fa-search"
                      />
                    </span>,
                    "className": "button is-dark",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <i
                        className="fas fa-search"
                      />,
                      "className": "icon",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "className": "fas fa-search",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "i",
                    },
                    "type": "span",
                  },
                  "type": "button",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "section",
        },
        "type": "form",
      },
      "type": "div",
    },
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="container"
        >
          <form
            action="#"
            method="POST"
            onSubmit={[Function]}
          >
            <section
              className="columns"
            >
              <div
                className="column is-6 is-offset-3 has-text-centered"
              >
                <div
                  className="field is-horizontal"
                >
                  <input
                    autoFocus={true}
                    className="input"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <button
                    className="button is-dark"
                  >
                    <span
                      className="icon"
                    >
                      <i
                        className="fas fa-search"
                      />
                    </span>
                  </button>
                </div>
              </div>
            </section>
          </form>
        </div>,
        "className": "section",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <form
            action="#"
            method="POST"
            onSubmit={[Function]}
          >
            <section
              className="columns"
            >
              <div
                className="column is-6 is-offset-3 has-text-centered"
              >
                <div
                  className="field is-horizontal"
                >
                  <input
                    autoFocus={true}
                    className="input"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <button
                    className="button is-dark"
                  >
                    <span
                      className="icon"
                    >
                      <i
                        className="fas fa-search"
                      />
                    </span>
                  </button>
                </div>
              </div>
            </section>
          </form>,
          "className": "container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "action": "#",
            "children": <section
              className="columns"
            >
              <div
                className="column is-6 is-offset-3 has-text-centered"
              >
                <div
                  className="field is-horizontal"
                >
                  <input
                    autoFocus={true}
                    className="input"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <button
                    className="button is-dark"
                  >
                    <span
                      className="icon"
                    >
                      <i
                        className="fas fa-search"
                      />
                    </span>
                  </button>
                </div>
              </div>
            </section>,
            "method": "POST",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="column is-6 is-offset-3 has-text-centered"
              >
                <div
                  className="field is-horizontal"
                >
                  <input
                    autoFocus={true}
                    className="input"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <button
                    className="button is-dark"
                  >
                    <span
                      className="icon"
                    >
                      <i
                        className="fas fa-search"
                      />
                    </span>
                  </button>
                </div>
              </div>,
              "className": "columns",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="field is-horizontal"
                >
                  <input
                    autoFocus={true}
                    className="input"
                    onChange={[Function]}
                    type="text"
                    value=""
                  />
                  <button
                    className="button is-dark"
                  >
                    <span
                      className="icon"
                    >
                      <i
                        className="fas fa-search"
                      />
                    </span>
                  </button>
                </div>,
                "className": "column is-6 is-offset-3 has-text-centered",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <input
                      autoFocus={true}
                      className="input"
                      onChange={[Function]}
                      type="text"
                      value=""
                    />,
                    <button
                      className="button is-dark"
                    >
                      <span
                        className="icon"
                      >
                        <i
                          className="fas fa-search"
                        />
                      </span>
                    </button>,
                  ],
                  "className": "field is-horizontal",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "autoFocus": true,
                      "className": "input",
                      "onChange": [Function],
                      "type": "text",
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "input",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <span
                        className="icon"
                      >
                        <i
                          className="fas fa-search"
                        />
                      </span>,
                      "className": "button is-dark",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <i
                          className="fas fa-search"
                        />,
                        "className": "icon",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "className": "fas fa-search",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "i",
                      },
                      "type": "span",
                    },
                    "type": "button",
                  },
                ],
                "type": "div",
              },
              "type": "div",
            },
            "type": "section",
          },
          "type": "form",
        },
        "type": "div",
      },
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
