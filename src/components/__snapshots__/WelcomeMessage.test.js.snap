// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WelcomeMessage Component should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WelcomeMessage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="column is-8 is-offset-2 has-text-centered"
      >
        <div
          className="notification"
        >
          <strong>
            Start looking for marvellous videos now!
          </strong>
        </div>
      </div>,
      "className": "columns",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="notification"
        >
          <strong>
            Start looking for marvellous videos now!
          </strong>
        </div>,
        "className": "column is-8 is-offset-2 has-text-centered",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <strong>
            Start looking for marvellous videos now!
          </strong>,
          "className": "notification",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Start looking for marvellous videos now!",
          },
          "ref": null,
          "rendered": "Start looking for marvellous videos now!",
          "type": "strong",
        },
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="column is-8 is-offset-2 has-text-centered"
        >
          <div
            className="notification"
          >
            <strong>
              Start looking for marvellous videos now!
            </strong>
          </div>
        </div>,
        "className": "columns",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="notification"
          >
            <strong>
              Start looking for marvellous videos now!
            </strong>
          </div>,
          "className": "column is-8 is-offset-2 has-text-centered",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <strong>
              Start looking for marvellous videos now!
            </strong>,
            "className": "notification",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Start looking for marvellous videos now!",
            },
            "ref": null,
            "rendered": "Start looking for marvellous videos now!",
            "type": "strong",
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
